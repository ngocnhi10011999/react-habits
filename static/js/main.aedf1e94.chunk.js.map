{"version":3,"sources":["components/MonthView.js","services/authService.js","services/dateService.js","reducers/dateReducer.js","components/Checkbox.js","services/habitService.js","reducers/habitReducer.js","components/Habit.js","reducers/displayReducer.js","components/HabitForm.js","reducers/authReducer.js","components/LoginForm.js","reducers/notificationReducer.js","components/RegisterForm.js","components/HabitData.js","components/HabitDataList.js","components/Notification.js","App.js","store.js","index.js"],"names":["token","register","userObject","a","axios","post","res","data","error","login","setToken","tokenToSet","getToken","getAll","config","headers","Authorization","authService","get","addNew","dateObject","update","id","habit","put","addDate","dispatch","dateService","addedDate","type","habitsMarked","map","reducer","state","action","concat","date","mapDispatchToProps","toggleHabit","updatedDate","connect","dates","display","thisDate","i","useState","checked","setChecked","useEffect","filter","d","year","displayYear","month","displayMonth","find","day","undefined","h","onClick","Icon","name","habitObject","remove","delete","deleteHabit","habitService","setTimeout","highlightHabit","important","highlightedHabit","displayDates","setDisplayDates","checkboxes","setCheckboxes","highlighted","setHighlighted","dateList","boxes","box","push","displayMonthLength","Table","Row","Cell","style","backgroundColor","key","Button","animated","color","Content","visible","hidden","monthNames","noOfDays","currentDate","Date","currentMonth","getMonth","init","getFullYear","displayMonthName","style_headercell","padding","header","HeaderCell","changeDisplayMonth","value","initHabits","habits","initDates","props","Container","width","Label","Divider","margin","striped","celled","compact","Header","slice","Body","icon","labelPosition","newHabit","addedHabit","habitName","setHabitName","class","Form","onSubmit","event","preventDefault","Input","placeholder","onChange","target","user","window","localStorage","setItem","JSON","stringify","username","setUsername","password","setPassword","fluid","label","setNotification","message","passwordRepeat","setPasswordRepeat","handleRegister","basic","percentage","setPercentage","datesWithHabit","newPercentage","Math","round","length","Segment","Progress","percent","indicating","notification","Message","info","autoLogin","logout","auth","storedUser","parse","getItem","as","textAlign","Subheader","Grid","columns","relaxed","stackable","Column","verticalAlign","vertical","Menu","Item","position","horizontal","combineReducers","habitReducer","dateReducer","displayReducer","authReducer","notificationReducer","store","createStore","applyMiddleware","thunk","render","ReactDOM","document","getElementById","subscribe"],"mappings":"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","file":"static/js/main.aedf1e94.chunk.js","sourcesContent":["import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport Habit from './Habit'\nimport { addDate, initDates } from '../reducers/dateReducer'\nimport { changeDisplayMonth } from '../reducers/displayReducer'\nimport { initHabits } from '../reducers/habitReducer'\nimport { Table, Button, Icon, Container, Label, Divider } from 'semantic-ui-react'\n\n//var daynow = day.getDate();\nconst style_headercell = {\n  padding: \"10px\",\n  \"text-align\": \"center\",\n}\nconst headers = []\nfor (let i = 1; i <= 31; i++) {\n  // if (i === parseInt(daynow)){\n  //   const header = <Table.HeaderCell style={style_headercell, { \"background-color\": \"green\"}} key={i}>{i}</Table.HeaderCell>\n  //   headers.push(header)\n  // }else{\n  const header = <Table.HeaderCell style={style_headercell} key={i}>{i}</Table.HeaderCell>\n  headers.push(header)\n  //}\n  // headers.push(header)\n}\n\nconst MonthView = (props) => {\n\n  useEffect(() => {\n    props.initHabits()\n  }, [props])\n\n  useEffect(() => {\n    props.initDates()\n  }, [props])\n\n  return (\n    <Container style={{ width: \"100%\"}}>\n      <h2>{`${props.display.displayMonthName} (${props.display.displayMonth + 1}/${props.display.displayYear})`}</h2>\n      {props.display.displayMonth === props.display.currentDate.getMonth()\n        ? <Label color=\"teal\">Current Month</Label>\n        : <></>\n      }\n      <Divider hidden />\n      <Container style={{ width: \"100%\", margin: \"0 auto\" }}>\n        <Table striped celled compact='very' style={{  }}>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell>Habit</Table.HeaderCell>\n              {headers.slice(0, props.display.displayMonthLength).map(header => header)}\n              <Table.HeaderCell>Delete</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            {props.habits.map(h => <Habit key={h.name} habit={h} />)}\n          </Table.Body>\n        </Table>\n      </Container>\n      <Divider hidden />\n      <Button icon labelPosition='left' onClick={() => props.changeDisplayMonth(props.display.displayMonth - 1)}>\n        <Icon name='angle left' />\n        <Button.Content>\n          Previous Month\n        </Button.Content>\n      </Button>\n      <Button icon labelPosition='right' onClick={() => props.changeDisplayMonth(props.display.displayMonth + 1)}>\n        <Icon name='angle right' />\n        <Button.Content>\n          Next Month\n        </Button.Content>\n      </Button>\n    </Container>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    habits: state.habits,\n    dates: state.dates,\n    display: state.display\n  }\n}\n\nconst mapDispatchToProps = {\n  addDate,\n  changeDisplayMonth,\n  initHabits,\n  initDates\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MonthView)","import axios from 'axios'\nconst url = '/api/auth'\n\nlet token = null\n\nconst setToken = (tokenToSet) => {\n  token = `bearer ${tokenToSet}`\n}\n\nconst getToken = () => {\n  return token\n}\n\nconst register = async (userObject) => {\n  const res = await axios.post(`${url}/register`, userObject)\n  if (res.data.error) {\n    return null\n  }\n  return res.data\n}\n\nconst login = async (userObject) => {\n  const res = await axios.post(`${url}/login`, userObject)\n  if (res.data.error) {\n    return null\n  }\n  return res.data\n}\n\nexport default { register, login, setToken, getToken }","import axios from 'axios'\nimport authService from './authService'\n\nconst url = '/api/dates'\n\nconst getAll = async () => {\n  const config = { headers: { Authorization: authService.getToken() } }\n  const res = await axios.get(url, config)\n  return res.data\n}\n\nconst addNew = async (dateObject) => {\n  const config = { headers: { Authorization: authService.getToken() } }\n  const res = await axios.post(url, dateObject, config)\n  return res.data\n}\n\nconst update = async (id, habit) => {\n  const config = { headers: { Authorization: authService.getToken() } }\n  const res = await axios.put(`${url}/${id}`, habit, config)\n  return res.data\n}\n\nexport default { getAll, addNew, update }","import dateService from '../services/dateService'\n\nexport const initDates = () => {\n  return async dispatch => {\n    const dates = await dateService.getAll()\n    dispatch({\n      type: 'INITDATES',\n      data: dates\n    })\n  }\n}\n\nexport const addDate = (dateObject) => {\n  return async dispatch => {\n    const addedDate = await dateService.addNew(dateObject)\n    dispatch({\n      type: 'ADDDATE',\n      data: {\n        ...addedDate,\n        habitsMarked: addedDate.habitsMarked.map(habit => habit.id)\n      }\n    })\n  }\n}\n\nexport const toggleHabit = (date, habit) => {\n  return async dispatch => {\n    const updatedDate = await dateService.update(date.id, habit)\n    dispatch({\n      type: 'TOGGLEHABIT',\n      data: updatedDate\n    })\n  }\n}\n\nconst reducer = (state = [], action) => {\n  switch (action.type) {\n    case 'INITDATES':\n      return action.data\n    case 'ADDDATE':\n      return state.concat(action.data)\n    case 'TOGGLEHABIT':\n      return state.map(date => date.id === action.data.id ? action.data : date)\n    default:\n      return state\n  }\n}\n\nexport default reducer","import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { addDate, toggleHabit } from '../reducers/dateReducer'\nimport { Icon } from 'semantic-ui-react'\n\nconst Checkbox = ({ thisDate, i, habit, display, addDate, toggleHabit, dates }) => {\n  const [checked, setChecked] = useState(false)\n\n  useEffect(() => {\n    const date = dates.filter(d => d.year === display.displayYear).filter(d => d.month === display.displayMonth + 1).find(d => d.day === i)\n\n    date === undefined\n      ? setChecked(false)\n      : setChecked(date.habitsMarked.find(h => h === habit.id) !== undefined)\n  }, [dates, display.displayYear, display.displayMonth, i, habit.id])\n\n  const handleClick = () => {\n    thisDate === undefined\n      ? addDate({ day: i, month: display.displayMonth + 1, year: display.displayYear, habitsMarked: [habit] })\n      : toggleHabit(thisDate, habit)\n    setChecked(!checked)\n  }\n\n  return (\n    <div onClick={handleClick}>{checked ? <Icon name='circle' /> : <Icon name='circle outline' />}</div>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return ({\n    dates: state.dates,\n    display: state.display\n  })\n}\n\nconst mapDispatchToProps = {\n  addDate,\n  toggleHabit\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Checkbox)","import axios from 'axios'\nimport authService from './authService'\n\nconst url = '/api/habits'\n\nconst getAll = async () => {\n  const config = { headers: { Authorization: authService.getToken() } }\n  const res = await axios.get(url, config)\n  return res.data\n}\n\nconst addNew = async (habitObject) => {\n  const config = { headers: { Authorization: authService.getToken() } }\n  const res = await axios.post(url, habitObject, config)\n  return res.data\n}\n\nconst update = async (habitObject) => {\n  const config = { headers: { Authorization: authService.getToken() } }\n  const res = await axios.put(`${url}/${habitObject.id}`, habitObject, config)\n  return res.data\n}\n\nconst remove = async (id) => {\n  const config = { headers: { Authorization: authService.getToken() } }\n  const res = await axios.delete(`${url}/${id}`, config)\n  return res.data\n}\n\nexport default { getAll, addNew, update, remove }","import habitService from '../services/habitService'\n\nexport const initHabits = () => {\n  return async dispatch => {\n    const habits = await habitService.getAll()\n    dispatch({\n      type: 'INITHABITS',\n      data: habits\n    })\n  }\n}\n\nexport const newHabit = (habitObject) => {\n  return async dispatch => {\n    const addedHabit = await habitService.addNew(habitObject)\n    dispatch({\n      type: 'NEWHABIT',\n      data: addedHabit\n    })\n\n    // Dispatch a notification (Handled @ notificationReducer.js)\n    dispatch({\n      type: 'SETNOTIFICATION',\n      data: `Added new habit: ${habitObject.name}`\n    })\n\n    setTimeout(() => {\n      dispatch({\n        type: 'SETNOTIFICATION',\n        data: null\n      })\n    }, 4000)\n  }\n}\n\nexport const deleteHabit = (habit) => {\n  return async dispatch => {\n    await habitService.remove(habit.id)\n    dispatch({\n      type: 'DELETEHABIT',\n      data: habit\n    })\n\n    // Dispatch a notification (Handled @ notificationReducer.js)\n    dispatch({\n      type: 'SETNOTIFICATION',\n      data: `Deleted habit: ${habit.name}`\n    })\n\n    setTimeout(() => {\n      dispatch({\n        type: 'SETNOTIFICATION',\n        data: null\n      })\n    }, 4000)\n  }\n}\n\nexport const highlightHabit = (habit) => {\n  habit.important = !habit.important\n  return async dispatch => {\n    const highlightedHabit = await habitService.update(habit)\n    dispatch({\n      type: 'HIGHLIGHTHABIT',\n      data: highlightedHabit\n    })\n  }\n}\n\nconst reducer = (state = [], action) => {\n  switch (action.type) {\n    case 'INITHABITS':\n      return action.data\n    case 'NEWHABIT':\n      return state.concat(action.data)\n    case 'DELETEHABIT':\n      return state.filter(habit => habit.name !== action.data.name)\n    case 'HIGHLIGHTHABIT':\n      return state.map(habit => habit.name === action.data.name ? action.data : habit)\n    default:\n      return state\n  }\n}\n\nexport default reducer","import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport Checkbox from './Checkbox'\nimport { deleteHabit, highlightHabit } from '../reducers/habitReducer'\nimport { Table, Button, Icon } from 'semantic-ui-react'\n\nconst Habit = ({ habit, dates, display, deleteHabit, highlightHabit }) => {\n  const [displayDates, setDisplayDates] = useState(dates)\n  const [checkboxes, setCheckboxes] = useState([])\n  const [highlighted, setHighlighted] = useState(false)\n\n  useEffect(() => {\n    const dateList = dates.filter(date => date.year === display.displayYear).filter(date => date.month === display.displayMonth + 1)\n    setDisplayDates(dateList)\n  }, [dates, display.displayMonth, display.displayYear])\n\n  useEffect(() => {\n    let boxes = []\n    for (let i = 1; i <= display.displayMonthLength; i++) {\n      const thisDate = displayDates.find(d => d.day === i)\n      const box = { thisDate, i, habit }\n      boxes.push(box)\n    }\n    setCheckboxes(boxes)\n  }, [display.displayMonthLength, displayDates, habit])\n\n  useEffect(() => {\n    setHighlighted(habit.important)\n  }, [habit.important])\n\n  const toggleHighlighted = () => {\n    setHighlighted(!highlighted)\n    highlightHabit(habit)\n  }\n\n  return (\n    <Table.Row>\n      <Table.Cell onClick={toggleHighlighted} style={highlighted ? { backgroundColor: 'yellow' } : { backgroundColor: '' }}>{habit.name}</Table.Cell>\n      {checkboxes.map(box =>\n        <Table.Cell key={box.i}>\n          <Checkbox {...box} />\n        </Table.Cell>)\n      }\n      <Table.Cell>\n        <Button animated color='red' onClick={() => deleteHabit(habit)}>\n          <Button.Content visible>\n            <Icon name='delete'/>\n          </Button.Content>\n          <Button.Content hidden>\n            DELETE\n          </Button.Content>\n        </Button>\n      </Table.Cell>\n    </Table.Row>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return ({\n    dates: state.dates,\n    display: state.display\n  })\n}\n\nconst mapDispatchToProps = {\n  deleteHabit,\n  highlightHabit\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Habit)","const monthNames = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\nconst noOfDays = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n\nconst currentDate = new Date()\nconst currentMonth = currentDate.getMonth()\n\nconst init = {\n  currentDate: currentDate,\n  displayMonth: currentMonth,\n  displayYear: currentDate.getFullYear(),\n  displayMonthName: monthNames[currentMonth],\n  displayMonthLength: noOfDays[currentMonth]\n}\n\nexport const changeDisplayMonth = (value) => {\n  return async dispatch => {\n    dispatch({\n      type: 'CHANGEMONTH',\n      data: value\n    })\n  }\n}\n\nconst reducer = (state = init, action) => {\n  switch (action.type) {\n    case 'CHANGEMONTH':\n      if (action.data < 0) {\n        return {\n          currentDate: state.currentDate,\n          displayMonth: 11,\n          displayYear: state.displayYear - 1,\n          displayMonthName: monthNames[11],\n          displayMonthLength: noOfDays[11]\n        }\n      } else if (action.data > 11) {\n        return {\n          currentDate: state.currentDate,\n          displayMonth: 0,\n          displayYear: state.displayYear + 1,\n          displayMonthName: monthNames[0],\n          displayMonthLength: noOfDays[0]\n        }\n      } else {\n        return {\n          currentDate: state.currentDate,\n          displayMonth: action.data,\n          displayYear: state.displayYear,\n          displayMonthName: monthNames[action.data],\n          displayMonthLength: noOfDays[action.data]\n        }\n      }\n    default:\n      return state\n  }\n}\n\nexport default reducer","import React, { useState } from 'react'\nimport { newHabit } from '../reducers/habitReducer'\nimport { connect } from 'react-redux'\nimport { Form } from 'semantic-ui-react'\n\nconst HabitForm = (props) => {\n  const [habitName, setHabitName] = useState('')\n\n  const handleNewHabit = (event) => {\n    event.preventDefault()\n    props.newHabit({ name: habitName, important: false })\n    setHabitName('')\n  }\n\n  return (\n    <div style={{ \"width\": \"60%\", \"margin\": \"0 auto\"}}>\n      <h3 class=\"text-add-habit\">Add a Habit</h3>\n      <Form onSubmit={handleNewHabit}>\n        <Form.Input placeholder='Jogging' type='text' value={habitName} onChange={(event) => setHabitName(event.target.value)} />\n        <Form.Button type='submit'>Add new...</Form.Button>\n      </Form>\n    </div>\n  )\n}\n\nconst mapDispatchToProps = {\n  newHabit\n}\n\nexport default connect(null, mapDispatchToProps)(HabitForm)","import authService from '../services/authService'\n\nexport const login = (userObject) => {\n  return async dispatch => {\n    const user = await authService.login(userObject)\n    if (user) {\n      authService.setToken(user.token)\n      window.localStorage.setItem('user', JSON.stringify(user))\n      dispatch({\n        type: 'LOGIN',\n        data: user\n      })\n    } else {\n      // Dispatch an error message\n      // (notifications are handled by notificationReducer.js)\n      dispatch({\n        type: 'SETNOTIFICATION',\n        data: 'Login failed. Invalid username or password.'\n      })\n\n      setTimeout(() => {\n        dispatch({\n          type: 'SETNOTIFICATION',\n          data: null\n        })\n      }, 4000)\n    }\n  }\n}\n\nexport const autoLogin = (userObject) => {\n  return async dispatch => {\n    authService.setToken(userObject.token)\n    dispatch({\n      type: 'LOGIN',\n      data: userObject\n    })\n  }\n}\n\nexport const logout = () => {\n  return async dispatch => {\n    window.localStorage.setItem('user', null)\n    dispatch({\n      type: 'LOGOUT'\n    })\n\n    // Dispatch a logout notification\n    // (notifications are handled by notificationReducer.js)\n    dispatch({\n      type: 'SETNOTIFICATION',\n      data: 'Logged out!'\n    })\n\n    setTimeout(() => {\n      dispatch({\n        type: 'SETNOTIFICATION',\n        data: null\n      })\n    }, 4000)\n  }\n}\n\nconst reducer = (state = null, action) => {\n  switch (action.type) {\n    case 'LOGIN':\n      return action.data\n    case 'LOGOUT':\n      return null\n    default:\n      return state\n  }\n}\n\nexport default reducer","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { login } from '../reducers/authReducer'\nimport { Form } from 'semantic-ui-react'\n\nconst LoginForm = (props) => {\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n\n  const handleLogin = (event) => {\n    event.preventDefault()\n    props.login({ username: username, password: password })\n    setUsername('')\n    setPassword('')\n  }\n\n  return (\n    <div>\n      <h2>Log In</h2>\n      <Form onSubmit={handleLogin}>\n        <Form.Input fluid label='Username' placeholder='Username' type='text' value={username} onChange={(event) => setUsername(event.target.value)} />\n        <Form.Input fluid label='Password' placeholder='********' type='password' value={password} onChange={(event) => setPassword(event.target.value)} />\n        <Form.Button type='submit'>Log in</Form.Button>\n      </Form>\n    </div>\n  )\n}\n\nconst mapDispatchToProps = {\n  login\n}\n\nexport default connect(null, mapDispatchToProps)(LoginForm)","export const setNotification = (message) => {\n  return async dispatch => {\n    dispatch({\n      type: 'SETNOTIFICATION',\n      data: message\n    })\n\n    setTimeout(() => {\n      dispatch({\n        type: 'SETNOTIFICATION',\n        data: null\n      })\n    }, 4000)\n  }\n}\n\nconst reducer = (state = null, action) => {\n  switch (action.type) {\n    case 'SETNOTIFICATION':\n      return action.data\n    default:\n      return state\n  }\n}\n\nexport default reducer","import React, { useState } from 'react'\nimport authService from '../services/authService'\nimport { Form, Label, Divider } from 'semantic-ui-react'\nimport { connect } from 'react-redux'\nimport { setNotification } from '../reducers/notificationReducer'\n\nconst RegisterForm = (props) => {\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [passwordRepeat, setPasswordRepeat] = useState('')\n\n  const handleRegister = async (event) => {\n    event.preventDefault()\n\n    if (password === passwordRepeat) {\n      const registeredUser = await authService.register({ username: username, password: password })\n      if (registeredUser) {\n        props.setNotification('Registration successful! You may now log in.')\n      } else {\n        props.setNotification('Registration failed. Username may already be in use.')\n      }\n    } else {\n      props.setNotification('Passwords Not Matching')\n    }\n\n    setUsername('')\n    setPassword('')\n    setPasswordRepeat('')\n  }\n\n  return (\n    <div>\n      <h2>Register</h2>\n      <Form onSubmit={handleRegister}>\n        <Form.Input fluid label='Username' placeholder='Enter your desired username' type='text' value={username} onChange={(event) => setUsername(event.target.value)} />\n        <Form.Input fluid label='Password' placeholder='Password' type='password' value={password} onChange={(event) => setPassword(event.target.value)} />\n        <Form.Input fluid label='Repeat Password' placeholder='Repeat Password' type='password' value={passwordRepeat} onChange={(event) => setPasswordRepeat(event.target.value)} />\n        <Divider hidden />\n        <Label basic color='red'>By registering you agree not to store truly sensitive information on this website</Label>\n        <Divider hidden />\n        <Form.Button type='submit'>Register</Form.Button>\n      </Form>\n    </div>\n  )\n}\n\nconst mapDispatchToProps = {\n  setNotification\n}\n\nexport default connect(null, mapDispatchToProps)(RegisterForm)","import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { Progress, Segment } from 'semantic-ui-react'\n\nconst HabitData = ({ habit, dates, display }) => {\n  const [percentage, setPercentage] = useState(0)\n\n  useEffect(() => {\n    const datesDisplayedMonth = dates\n      .filter(date => date.year === display.displayYear)\n      .filter(date => date.month === display.displayMonth + 1)\n    const datesWithHabit = datesDisplayedMonth\n      .filter(date => date.habitsMarked.find(h => h === habit.id) !== undefined)\n    const newPercentage = Math.round((datesWithHabit.length / display.displayMonthLength) * 100)\n    setPercentage(newPercentage)\n  }, [dates, display.displayMonthLength, display.displayMonth, habit.id, display.displayYear])\n\n  return (\n    <Segment key={habit.id}>\n      <h4>{habit.name}</h4>\n      <Progress percent={percentage} indicating />\n      {percentage} % daily habit\n    </Segment>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    dates: state.dates,\n    display: state.display,\n    habits: state.habits\n  }\n}\n\nexport default connect(mapStateToProps)(HabitData)","import React from 'react'\nimport { connect } from 'react-redux'\nimport HabitData from './HabitData'\n\nconst HabitDataList = (props) => {\n  return (\n    <>\n      {props.habits.map(habit => <HabitData key={habit.id} habit={habit} />)}\n    </>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    habits: state.habits\n  }\n}\n\nexport default connect(mapStateToProps)(HabitDataList)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Message } from 'semantic-ui-react'\n\nconst Notification = (props) => {\n  return (\n    <>\n      {props.notification !== null\n        ?\n        <Message info>\n          <Message.Header>{props.notification}</Message.Header>\n        </Message>\n        :\n        <></>\n      }\n\n    </>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    notification: state.notification\n  }\n}\n\nexport default connect(mapStateToProps)(Notification)","import React, { useEffect } from 'react'\nimport './App.css';\nimport { connect } from 'react-redux'\nimport MonthView from './components/MonthView'\nimport HabitForm from './components/HabitForm'\nimport LoginForm from './components/LoginForm'\nimport RegisterForm from './components/RegisterForm'\nimport { autoLogin, logout } from './reducers/authReducer'\nimport { Container, Button, Icon, Menu, Header, Grid, Segment, Divider } from 'semantic-ui-react'\nimport HabitDataList from './components/HabitDataList'\nimport Notification from './components/Notification'\n\nconst App = (props) => {\n\n  useEffect(() => {\n    const storedUser = JSON.parse(window.localStorage.getItem('user'))\n    if (storedUser && storedUser.token) {\n      props.autoLogin(storedUser)\n    }\n  }, [props])\n\n  const loginView = () => {\n    return (\n      <Container>\n        <Divider hidden />\n        <Header as='h1' icon textAlign='center'>\n          {/* <Icon name='tasks' /> */}\n          {/* <Header.Content as='h1'><span className=\"logo-text1\">Habit</span>&nbsp;<span className=\"logo-text2\">Tracker</span></Header.Content> */}\n          <Header.Subheader>FOR DEMONSTRATION PURPOSES ONLY</Header.Subheader>\n        </Header>\n        <Notification />\n        <Segment>\n          <Grid columns='2' relaxed stackable>\n            <Grid.Column>\n              <LoginForm />\n            </Grid.Column>\n            <Grid.Column verticalAlign='middle'>\n              <RegisterForm />\n            </Grid.Column>\n          </Grid>\n          <Divider vertical>Or</Divider>\n        </Segment>\n      </Container>\n    )\n  }\n\n  const homeView = () => {\n    return (\n      <>\n        <Menu>\n          <Menu.Item header color='violet' name='title'>\n            <Icon name='tasks' />\n            Habit Tracker\n          </Menu.Item>\n          <Menu.Item name='loggedInUser'>Logged in as {props.auth.username}</Menu.Item>\n          {/* <Menu.Item name='demo'>FOR DEMONSTRATION PURPOSES ONLY</Menu.Item> */}\n          <Menu.Item position='right' name='logout'>\n            <Button animated onClick={props.logout}>\n              <Button.Content hidden>Log Out</Button.Content>\n              <Button.Content visible><Icon name='log out' /></Button.Content>\n            </Button>\n          </Menu.Item>\n        </Menu>\n        <Container style={{ width: \"100%\"}}>\n          <Notification />\n          <MonthView />\n          <Divider horizontal>\n            New Habit\n          </Divider>\n          <HabitForm />\n          <Divider horizontal>\n            Stats\n          </Divider>\n          <HabitDataList />\n        </Container>\n      </>\n    )\n  }\n\n  return (\n    <Container fluid>\n      {props.auth === null ? loginView() : homeView()}\n      <Divider hidden />\n      <Container>\n        <Segment color='purple'>\n          <h6>Nteeams / GitHub Repository / GNU GPL 3.0</h6>\n        </Segment>\n      </Container>\n    </Container>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.auth\n  }\n}\n\nconst mapDispatchToProps = {\n  autoLogin,\n  logout\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n","import { createStore, applyMiddleware, combineReducers } from 'redux'\nimport thunk from 'redux-thunk'\nimport habitReducer from './reducers/habitReducer'\nimport dateReducer from './reducers/dateReducer'\nimport displayReducer from './reducers/displayReducer'\nimport authReducer from './reducers/authReducer'\nimport notificationReducer from './reducers/notificationReducer'\n\nconst reducer = combineReducers({\n  habits: habitReducer,\n  dates: dateReducer,\n  display: displayReducer,\n  auth: authReducer,\n  notification: notificationReducer\n})\n\nconst store = createStore(reducer, applyMiddleware(thunk))\n\nexport default store","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport store from './store'\nimport { Provider } from 'react-redux'\n\nconst render = () => { ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root')) }\n\nrender()\nstore.subscribe(render)\n"],"sourceRoot":""}